Parameters:

    EnvironmentBuild:
        Description: This is used as a tag for this account
        Type: String

Resources:
    LBSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: Allow httpd to our load balancer
            VpcId:
                Fn::ImportValue:
                    !Sub ${EnvironmentBuild}-VPCID
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0

    WebServerSecurityGroup:
        Type: AWS::EC2::SecurityGroup
        Properties:
            GroupDescription: This allow httpd and ssh
            VpcId:
                Fn::ImportValue:
                    !Sub ${EnvironmentBuild}-VPCID
            SecurityGroupIngress:
            - IpProtocol: tcp
              FromPort: 80
              ToPort: 80
              CidrIp: 0.0.0.0/0
            - IpProtocol: tcp
              FromPort: 22
              ToPort: 22
              CidrIp: 0.0.0.0/0
            SecurityGroupEgress:
            - IpProtocol: tcp
              FromPort: 0
              ToPort: 65535
              CidrIp: 0.0.0.0/0

    WebAppLaunchConfig:
        Type: AWS::AutoScaling::LaunchConfiguration
        Properties:
          UserData:
            Fn::Base64: !Sub |
              #!/bin/bash
              yum update -y
              yum install httpd -y
              service httpd start
              chkconfig httpd on
              cd /var/www/html
              echo "Tonero Web server Up and running! YEA!" > index.html

          ImageId: ami-005bdb005fb00e791
          SecurityGroups:
          - Ref: WebServerSecurityGroup
          InstanceType: t3.small
          BlockDeviceMappings:
          - DeviceName: "/dev/sdk"
            Ebs:
              VolumeSize: '10'

    WebAppGroup:
        Type: AWS::AutoScaling::AutoScalingGroup
        Properties:
            VPCZoneIdentifier:
            - Fn::ImportValue:
                !Sub ${EnvironmentBuild}-Private-Subnets
            LaunchConfigurationName:
              Ref: WebAppLaunchConfig
            MinSize: '3'
            MaxSize: '5'
            TargetGroupARNs:
            - Ref: WebAppTargetGroup

    WebAppLB:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Subnets:
          - Fn::ImportValue: !Sub "${EnvironmentBuild}-PUB1-SN"
          - Fn::ImportValue: !Sub "${EnvironmentBuild}-PUB2-SN"
          SecurityGroups:
          - Ref: LBSecurityGroup

    Listener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
          DefaultActions:
          - Type: forward
            TargetGroupArn:
              Ref: WebAppLB
            Port: '80'
            Protocol: HTTP

    ALBListenerRule:
        Type: AWS::ElasticLoadBalancingV2::ListenerRule
        Properties:
          Actions:
          - Type: forward
            TargetGroupArn: !Ref 'WebAppTargetGroup'
            Conditions:
            - Field: path-pattern
              values: [/]
            ListenerArn: !Ref 'Listener'
            Priority: 1

    WebAppTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
          HealthCheckIntervalSeconds: 10
          HealthCheckPath: /
          HealthCheckProtocol: HTTP
          HealthCheckTimeoutSeconds: 8
          HealthyThresholdCount: 2
          Port: 8080
          Protocol: HTTP
          UnhealthyThresholdCount: 5
          VpcId:
            Fn::ImportValue:
              Fn::Sub: "${EnvironmentBuild}-VPCID"
